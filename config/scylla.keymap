#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    combos {
        compatible = "zmk,combos";

        combo1 {
            bindings = <&kp LA(N8)>;
            key-positions = <15 16>;
        };

        combo2 {
            bindings = <&kp LA(N9)>;
            key-positions = <19 20>;
        };

        combo3 {
            bindings = <&kp LS(N8)>;
            key-positions = <27 28>;
        };

        combo4 {
            bindings = <&kp LS(N9)>;
            key-positions = <31 32>;
        };

        combo5 {
            bindings = <&kp LA(LS(N8))>;
            key-positions = <39 40>;
        };

        combo6 {
            bindings = <&kp LA(LS(N9))>;
            key-positions = <43 44>;
        };

        combo7 {
            bindings = <&kp LS(N7)>;
            key-positions = <17 18>;
        };

        combo8 {
            bindings = <&kp LA(I)>;
            key-positions = <29 30>;
        };
    };

    behaviors {
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            global-quick-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&studio_unlock  &kp N1  &kp N2  &kp N3      &kp N4        &kp N5    &kp N6  &kp N7         &kp N8     &kp N9   &kp N0         &kp QUESTION
&kp TAB         &kp Q   &kp W   &kp E       &kp R         &kp T     &kp Y   &kp U          &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&kp LSHIFT      &kp A   &kp S   &kp D       &kp F         &kp G     &kp H   &kp J          &kp K      &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LCTRL       &kp Z   &kp X   &kp C       &kp V         &kp B     &kp N   &kp M          &kp COMMA  &kp DOT  &kp LT         &kp GT
                                &kp RETURN  &kp LEFT_GUI  &mo 1     &mo 1   &kp RIGHT_GUI  &kp SPACE
                                            &kp LEFT_ALT  &mo 2     &mo 2   &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp TILDE  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT        &kp CARET     &kp AMPS      &kp ASTRK        &kp LPAR      &kp RPAR       &kp DEL
&none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0   &kp PLUS
&none      &kp LC(A)     &kp LC(S)     &kp LC(D)     &kp LC(F)     &kp F12          &kp MINUS     &kp EQUAL     &kp GRAVE        &kp RC(L)     &kp SQT        &kp PIPE
&none      &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(LA(A))    &none         &none         &none            &none         &kp RC(SLASH)  &kp UNDER
                                       &trans        &none         &trans           &mo 0         &none         &kp RIGHT_SHIFT
                                                     &none         &trans           &none         &none
            >;
        };

        raise_layer {
            bindings = <
&kp F12  &kp F1     &kp F2           &kp F3           &kp F4           &kp F5             &kp F6     &kp F7        &kp F8    &kp F9     &kp F10  &kp F11
&none    &kp CAPS   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0    &none      &none         &kp UP    &none      &none    &kp C_MUTE
&none    &kp LCTRL  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT         &none      &kp LEFT      &kp DOWN  &kp RIGHT  &none    &kp C_VOL_UP
&none    &kp DEL    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp AT_SIGN        &none      &kp LEFT_ALT  &kp TAB   &none      &none    &kp C_VOL_DN
                                     &trans           &kp HOME         &mo 0              &trans     &kp RALT      &trans
                                                      &kp SPACE        &trans             &kp RCTRL  &kp RET
            >;
        };
    };
};
